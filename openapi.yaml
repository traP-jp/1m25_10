openapi: 3.0.3
info:
  title: traPhoto(仮) API
  description: 画像とアルバムを管理するためのAPI
  version: 1.0.0
  contact:
    name: traP-jp
    url: https://github.com/traP-jp/1m25_10

servers:
  - url: http://localhost:3001
    description: 開発サーバー（モック）
  - url: https://api.your-domain.com
    description: 本番サーバー

paths:
  /image:
    get:
      summary: 全ての画像を取得
      description: 全ての画像の詳細情報を配列で返します
      operationId: getImages
      tags:
        - Images
      responses:
        '200':
          description: 成功レスポンス
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image'
              example:
                - id: "0198cffa-4228-7afe-ac39-e0c88a0f0b81"
                  creator: "019619d0-e53a-7be9-add3-5096a746a93d"
                  post:
                    id: "0198cffa-42a2-7afe-b478-c11c146a2332"
                    content: "かわいい"
                - id: "01987e0e-bd1d-711f-ad98-1b37e53a6cd3"
                  creator: "019619d0-e53a-7be9-add3-5096a746a93d"
                  post:
                    id: "01987e0e-bddd-711f-be8a-991b87acaf08"
                    content: ":think-nya:"
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /image/{id}:
    get:
      summary: IDで画像詳細を取得
      description: 特定の画像の作成者と投稿データを含む詳細情報を返します
      operationId: getImageDetail
      tags:
        - Images
      parameters:
        - name: id
          in: path
          required: true
          description: 画像のUUID
          schema:
            type: string
            format: uuid
          example: "550e8400-e29b-41d4-a716-446655440001"
      responses:
        '200':
          description: 成功レスポンス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageDetail'
        '404':
          description: 画像が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Image not found"
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /albums:
    get:
      summary: 全てのアルバムを取得
      description: オプションのフィルタリングが可能なアルバムの配列を返します
      operationId: getAlbums
      tags:
        - Albums
      parameters:
        - name: creator_id
          in: query
          description: 作成者のUUIDでフィルタ
          schema:
            type: string
            format: uuid
        - name: before_date
          in: query
          description: この日付より前に作成されたアルバムでフィルタ
          schema:
            type: string
            format: date-time
        - name: after_date
          in: query
          description: この日付より後に作成されたアルバムでフィルタ
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          description: 返すアルバムの最大数（最大100）
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          description: スキップするアルバム数
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: 成功レスポンス
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlbumItem'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: 新しいアルバムを作成
      description: 提供された情報で新しいアルバムを作成します。作成者は認証されたユーザーから決定されます。
      operationId: createAlbum
      tags:
        - Albums
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlbumRequest'
      responses:
        '201':
          description: アルバムが正常に作成されました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /albums/{id}:
    get:
      summary: IDでアルバム詳細を取得
      description: 特定のアルバムの詳細情報を返します
      operationId: getAlbumDetail
      tags:
        - Albums
      parameters:
        - name: id
          in: path
          required: true
          description: アルバムのUUID
          schema:
            type: string
            format: uuid
          example: "550e8400-e29b-41d4-a716-446655440001"
      responses:
        '200':
          description: 成功レスポンス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '404':
          description: アルバムが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Album not found"
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: アルバムを更新
      description: 提供された情報で既存のアルバムを更新します
      operationId: updateAlbum
      tags:
        - Albums
      parameters:
        - name: id
          in: path
          required: true
          description: アルバムのUUID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAlbumRequest'
      responses:
        '200':
          description: アルバムが正常に更新されました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: アルバムが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: アルバムを削除
      description: 既存のアルバムを削除します
      operationId: deleteAlbum
      tags:
        - Albums
      parameters:
        - name: id
          in: path
          required: true
          description: アルバムのUUID
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: アルバムが正常に削除されました
        '403':
          description: 権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: アルバムが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Post:
      type: object
      required:
        - id
        - content
      properties:
        id:
          type: string
          format: uuid
          description: 投稿の一意識別子
          example: "0198cffa-42a2-7afe-b478-c11c146a2332"
        content:
          type: string
          description: 投稿の内容
          example: "かわいい"
    Image:
      type: object
      required:
        - id
        - creator
        - post
      properties:
        id:
          type: string
          format: uuid
          description: 画像の一意識別子
          example: "0198cffa-4228-7afe-ac39-e0c88a0f0b81"
        creator:
          type: string
          format: uuid
          description: 画像作成者の一意識別子
          example: "019619d0-e53a-7be9-add3-5096a746a93d"
        post:
          $ref: '#/components/schemas/Post'

    ImageDetail:
      type: object
      required:
        - id
        - creator
        - post
      properties:
        id:
          type: string
          format: uuid
          description: 画像の一意識別子
          example: "550e8400-e29b-41d4-a716-446655440001"
        creator:
          type: string
          format: uuid
          description: 画像作成者の一意識別子
          example: "019619d0-e53a-7be9-add3-5096a746a93d"
        post:
          $ref: '#/components/schemas/Post'

    Album:
      type: object
      required:
        - id
        - title
        - description
        - creator
        - images
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
          description: アルバムの一意識別子
          example: "550e8400-e29b-41d4-a716-446655440001"
        title:
          type: string
          description: アルバムのタイトル
          example: "夏の思い出"
        description:
          type: string
          description: アルバムの説明
          example: "2024年夏の写真集"
        creator:
          type: string
          format: uuid
          description: アルバム作成者のUUID
          example: "550e8400-e29b-41d4-a716-446655440002"
        images:
          type: array
          items:
            type: string
            format: uuid
          description: アルバム内の画像UUIDの配列
          example: 
            - "550e8400-e29b-41d4-a716-446655440003"
            - "550e8400-e29b-41d4-a716-446655440004"
        created_at:
          type: string
          format: date-time
          description: 作成タイムスタンプ
          example: "2024-07-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          description: 最終更新タイムスタンプ
          example: "2024-08-15T10:30:00Z"

    AlbumItem:
      type: object
      required:
        - id
        - title
        - creator
      properties:
        id:
          type: string
          format: uuid
          description: アルバムの一意識別子
          example: "550e8400-e29b-41d4-a716-446655440001"
        title:
          type: string
          description: アルバムのタイトル
          example: "夏の思い出"
        creator:
          type: string
          format: uuid
          description: アルバム作成者のUUID
          example: "550e8400-e29b-41d4-a716-446655440002"

    CreateAlbumRequest:
      type: object
      required:
        - title
        - description
      properties:
        title:
          type: string
          description: アルバムのタイトル
          example: "夏の思い出"
        description:
          type: string
          description: アルバムの説明
          example: "2024年夏の写真集"
        images:
          type: array
          items:
            type: string
            format: uuid
          description: アルバムに含める画像UUIDの配列
          example: 
            - "550e8400-e29b-41d4-a716-446655440003"
            - "550e8400-e29b-41d4-a716-446655440004"

    UpdateAlbumRequest:
      type: object
      properties:
        title:
          type: string
          description: アルバムのタイトル
          example: "夏の思い出 - 更新版"
        description:
          type: string
          description: アルバムの説明
          example: "2024年夏の写真集 - 追加写真あり"
        images:
          type: array
          items:
            type: string
            format: uuid
          description: アルバムに含める画像UUIDの配列
          example: 
            - "550e8400-e29b-41d4-a716-446655440003"
            - "550e8400-e29b-41d4-a716-446655440004"

    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: エラーメッセージ
          example: "Resource not found"
        message:
          type: string
          description: 追加のエラー詳細
          example: "The requested resource could not be found"

  responses:
    NotFound:
      description: 指定されたリソースが見つかりませんでした
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    ServerError:
      description: 内部サーバーエラー
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

tags:
  - name: Images
    description: 画像に関する操作
  - name: Albums
    description: アルバムに関する操作
